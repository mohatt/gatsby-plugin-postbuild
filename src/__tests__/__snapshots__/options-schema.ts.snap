// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`options schema > 'should invalidate empty options' 1`] = `false`;

exports[`options schema > 'should invalidate empty options' 2`] = `
[
  ""ignore[0]" is not allowed to be empty",
  ""processing.concurrency" must be greater than or equal to 1",
  ""processing.strategy" must be one of [sequential, parallel]",
  ""processing.strategy" is not allowed to be empty",
  ""extensions.txt.concurrency" must be greater than or equal to 1",
  ""extensions.txt.strategy" must be one of [sequential, parallel]",
  ""extensions.txt.strategy" is not allowed to be empty",
]
`;

exports[`options schema > 'should invalidate invalid options' 1`] = `false`;

exports[`options schema > 'should invalidate invalid options' 2`] = `
[
  ""events.on.load" is not allowed",
  ""events.html.content" is not allowed",
  ""processing.concurrency" must be greater than or equal to 1",
  ""processing.strategy" must be one of [sequential, parallel]",
  ""extensions.txt.concurrency" must be greater than or equal to 1",
  ""extensions.txt.strategy" must be one of [sequential, parallel]",
]
`;

exports[`options schema > 'should invalidate invalid tasks options' 1`] = `false`;

exports[`options schema > 'should invalidate invalid tasks options' 2`] = `
[
  ""http-headers.provider" must be one of [netlify, vercel, firebase]",
  ""http-headers.headers" must be of type object",
  ""http-headers.caching" must be a boolean",
  ""minify.style" must be one of [boolean, object, array, function]",
  ""minify.enabled" must be a boolean",
  ""minify.ignore" must be an array",
]
`;

exports[`options schema > 'should invalidate options with incorrect data types' 1`] = `false`;

exports[`options schema > 'should invalidate options with incorrect data types' 2`] = `
[
  ""enabled" must be a boolean",
  ""reporting" must be one of [object, boolean]",
  ""ignore" must be an array",
  ""events.on.bootstrap" must be of type function",
  ""events.html.parse" must be of type function",
  ""events.foo" must be of type object",
  ""events.txt.content" must be of type function",
  ""processing.concurrency" must be a number",
  ""processing.strategy" must be one of [sequential, parallel]",
  ""processing.strategy" must be a string",
  ""extensions.foo" must be of type object",
  ""extensions.txt.concurrency" must be a number",
  ""extensions.txt.strategy" must be one of [sequential, parallel]",
  ""extensions.txt.strategy" must be a string",
]
`;

exports[`options schema > 'should validate correct options (with alternatives)' 1`] = `true`;

exports[`options schema > 'should validate correct options (with alternatives)' 2`] = `[]`;

exports[`options schema > 'should validate correct options' 1`] = `true`;

exports[`options schema > 'should validate correct options' 2`] = `[]`;

exports[`options schema > 'should validate correct tasks options' 1`] = `true`;

exports[`options schema > 'should validate correct tasks options' 2`] = `[]`;

exports[`options schema > 'should validate default options' 1`] = `true`;

exports[`options schema > 'should validate default options' 2`] = `[]`;
