// tsconfig.json
{
  "compilerOptions": {
    // Base directory to resolve non-relative module names (project root)
    "baseUrl": ".",
    // Module aliases (if you use module aliases in webpack)
    "paths": {},
    // Library files to be used in the project.
    // Tells the compiler that 'DOM-APIs' and new ECMAScript features are valid.
    "lib": ["ESNext", "DOM"],
    "target": "ES6",
    // Search under node_modules for non-relative imports.
    "moduleResolution": "node",
    // Process & infer types from .js files.
    "allowJs": true,
    // Don't emit; only do type-checking, leave trasformation to Babel.
    "noEmit": true,
    // Enable strictest settings like strictNullChecks & noImplicitAny.
    "strict": true,
    // Allow default imports from modules with no default export (e.g
    // import React from 'React')
    "allowSyntheticDefaultImports": true,
    // Disallow features that require cross-file information for emit.
    // Cross-file information is not supported by Babel.
    "isolatedModules": true,
    // Import non-ES modules as default imports.
    "esModuleInterop": true,
    // Support jsx in .tsx files (https://www.typescriptlang.org/docs/handbook/jsx.html)
    "jsx": "preserve",
    // Skip type checking of declaration files.
    "skipLibCheck": true
  },
  "include": ["src"]
}
